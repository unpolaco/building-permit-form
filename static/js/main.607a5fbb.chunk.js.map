{"version":3,"sources":["FieldTextComponent.js","FieldCheckBoxComponent.js","assets/FieldsData.js","Validation.js","App.js","serviceWorker.js","index.js"],"names":["FieldTextComponent","name","classInput","classFieldSet","errors","touched","values","labelText","className","type","htmlFor","component","FieldCheckBoxComponent","id","fields","basicRegEx","postalCodeRegEx","phoneRegEx","initialValues","departmentName","changeProposalDate","changeProposalNumber","country","voivodeship","county","community","city","street","buildingNumber","localNumber","postalCode","phone","email","newBuildingPermitCheckbox","changeBuildingPermitCheckbox","validationSchema","Yup","shape","initValues","validVal","key","getCases","getValidValue","value","matches","required","App","onSubmit","a","Promise","r","setTimeout","alert","JSON","stringify","handleSubmit","autoFocus","map","field","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.607a5fbb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field, ErrorMessage } from 'formik';\r\nimport './App.css';\r\n\r\nexport default function FieldTextComponent({\r\n\tname,\r\n\tclassInput,\r\n\tclassFieldSet,\r\n\terrors,\r\n\ttouched,\r\n\tvalues,\r\n\tlabelText,\r\n}) {\r\n\treturn (\r\n\t\t<fieldset className={classFieldSet}>\r\n\t\t\t<Field\r\n\t\t\t\tclassName={touched && errors ? `errorColor ${classInput}` : classInput}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tname={name}\r\n\t\t\t/>\r\n\t\t\t<label className={touched && values !==\"\" ? 'labelFilled' : 'labelEmpty'} htmlFor={name}>\r\n\t\t\t\t{labelText}\r\n\t\t\t</label>\r\n\t\t\t{touched && errors ? (\r\n\t\t\t\t<ErrorMessage className='errorText' name={name} component='div' />\r\n\t\t\t) : null}\r\n\t\t</fieldset>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Field } from 'formik';\r\nimport './App.css';\r\n\r\nexport default function FieldCheckBoxComponent({ name, labelText }) {\r\n\treturn (\r\n\t\t<fieldset className='checkboxWrapper'>\r\n\t\t\t<Field type='checkbox' name={name} id={name}/>\r\n\t\t\t<label htmlFor={name}>{labelText}</label>\r\n\t\t</fieldset>\r\n\t);\r\n}\r\n"," const fields = [\r\n  {name: 'name', labelText: 'imię i nazwisko lub nazwa inwestora', classInput: 'long'},\r\n  {name: 'country', labelText: 'kraj'},\r\n  {name: 'voivodeship', labelText: 'województwo'},\r\n  {name: 'county', labelText: 'powiat'},\r\n  {name: 'community', labelText: 'gmina'},\r\n  {name: 'city', labelText: 'miejscowość'},\r\n  {name: 'street', labelText: 'ulica'},\r\n  {name: 'buildingNumber', labelText: 'nr budynku', classInput: 'short'},\r\n  {name: 'local number', labelText: 'nr lokalu', classInput: 'short'},\r\n  {name: 'postalCode', labelText: 'kod pocztowy', classInput: 'short'},\r\n  {name: 'phone', labelText: 'telefon'},\r\n  {name: 'email', labelText: 'e-mail'},\r\n  ];\r\n\r\n  export default fields;","import * as Yup from 'yup';\r\n\r\nconst basicRegEx = /^[a-ząćęłńóśżźA-ZĄĆĘŁŃÓŚŹŻ\\s-]{4,150}$/;\r\nconst postalCodeRegEx = /^([0-9]{2})(-[0-9]{3})?$/i;\r\nconst phoneRegEx = /(?<!\\w)(\\(?(\\+|00)?48\\)?)?[ -]?\\d{3}[ -]?\\d{3}[ -]?\\d{3}(?!\\w)/;\r\n\r\nexport const initialValues = {\r\n\tdepartmentName: '',\r\n\tchangeProposalDate: '',\r\n\tchangeProposalNumber: '',\r\n\tname: '',\r\n\tcountry: '',\r\n\tvoivodeship: '',\r\n\tcounty: '',\r\n\tcommunity: '',\r\n\tcity: '',\r\n\tstreet: '',\r\n\tbuildingNumber: '',\r\n\tlocalNumber: '',\r\n\tpostalCode: '',\r\n\tphone: '',\r\n\temail: '',\r\n\tnewBuildingPermitCheckbox: false,\r\n\tchangeBuildingPermitCheckbox: false,\r\n};\r\n\r\nexport const validationSchema = Yup.object().shape(getValidValue(initialValues));\r\n\r\nfunction getValidValue(initValues) {\r\n\tconst validVal = {};\r\n\tfor (const key in initValues) {\r\n\t\tvalidVal[key] = getCases(key);\r\n\t}\r\n\treturn validVal;\r\n}\r\n\r\nfunction getCases(value) {\r\n\tlet validVal;\r\n\tswitch (value) {\r\n\t\tcase 'departmentName':\r\n\t\tcase 'name':\r\n\t\tcase 'country':\r\n\t\tcase 'voivodeship':\r\n\t\tcase 'county':\r\n\t\tcase 'community':\r\n\t\tcase 'city':\r\n\t\tcase 'street':\r\n\t\t\tvalidVal = Yup.string()\r\n\t\t\t\t.matches(basicRegEx, 'Niepoprawne dane')\r\n\t\t\t\t.required('Uzupełnij dane');\r\n\t\t\tbreak;\r\n\t\tcase 'changeProposalDate':\r\n\t\t\tvalidVal = Yup.date('Niepoprawne dane');\r\n\t\t\tbreak;\r\n\t\tcase 'changeProposalNumber':\r\n\t\t\tvalidVal = Yup.string('Niepoprawne dane');\r\n\t\t\tbreak;\r\n\t\tcase 'buildingNumber':\r\n\t\t\tvalidVal = Yup.string().required('Uzupełnij dane');\r\n\t\t\tbreak;\r\n\t\tcase 'localNumber':\r\n\t\t\tvalidVal = Yup.string();\r\n\t\t\tbreak;\r\n\t\tcase 'postalCode':\r\n\t\t\tvalidVal = Yup.string()\r\n\t\t\t\t.matches(postalCodeRegEx, 'Niepoprawny kod pocztowy')\r\n\t\t\t\t.required('Uzupełnij dane');\r\n\t\t\tbreak;\r\n\t\tcase 'phone':\r\n\t\t\tvalidVal = Yup.string().matches(phoneRegEx, 'Niepoprawny numer telefonu');\r\n\t\t\tbreak;\r\n\t\tcase 'email':\r\n\t\t\tvalidVal = Yup.string().email('Niepoprawny adres email');\r\n\t\t\tbreak;\r\n\t\tcase 'newBuildingPermitCheckbox':\r\n\t\tcase 'changeBuildingPermitCheckbox':\r\n\t\t\tvalidVal = Yup.boolean();\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tvalidVal = Yup.string();\r\n\t}\r\n\treturn validVal;\r\n}\r\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport './App.css';\nimport FieldTextComponent from './FieldTextComponent';\nimport FieldCheckBoxComponent from './FieldCheckBoxComponent';\nimport fields from './assets/FieldsData';\nimport {initialValues} from './Validation'\nimport {validationSchema} from './Validation'\n\nexport default function App() {\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={initialValues}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tonSubmit={async (values) => {\n\t\t\t\tawait new Promise((r) => setTimeout(r, 500));\n\t\t\t\talert(JSON.stringify(values, null, 2));\n\t\t\t}}\n\t\t>\n\t\t\t{({ handleSubmit, values, errors, touched }) => (\n\t\t\t\t<Form className='wrapper' onSubmit={handleSubmit}>\n\t\t\t\t\t<h1 className='title'>\n\t\t\t\t\t\tWNIOSEK O POZWOLENIE NA BUDOWĘ LUB ROZBIÓRKĘ (B-1)\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p className='description center'>\n\t\t\t\t\t\t(podstawa prawna: art. 32 i art. 33 ustawy z dnia 7 lipca 1994 r. –\n\t\t\t\t\t\tPrawo budowlane)\n\t\t\t\t\t</p>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<p className='description bold'>\n\t\t\t\t\t\t\t\tProszę wpisać nazwę organu właściwego do wydania pozwolenia\n\t\t\t\t\t\t\t\t(organ, do którego kierowany jest wniosek):\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<FieldTextComponent\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tname='departmentName'\n\t\t\t\t\t\t\t\tlabelText='nazwa urzędu'\n\t\t\t\t\t\t\t\tclassInput='long'\n\t\t\t\t\t\t\t\terrors={errors.departmentName}\n\t\t\t\t\t\t\t\ttouched={touched.departmentName}\n\t\t\t\t\t\t\t\tvalues={values.departmentName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<p className='description bold'>\n\t\t\t\t\t\t\t\tProszę oznaczyć znakiem X cel złożenia wniosku:\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<FieldCheckBoxComponent\n\t\t\t\t\t\t\t\tname='newBuildingPermitCheckbox'\n\t\t\t\t\t\t\t\tlabelText='Wniosek o pozwolenie na budowę lub rozbiórkę'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<FieldCheckBoxComponent\n\t\t\t\t\t\t\t\tname='changeBuildingPermitCheckbox'\n\t\t\t\t\t\t\t\tlabelText='Wniosek o zmianę pozwolenia na budowę lub rozbiórkę z dnia'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{values.changeBuildingPermitCheckbox === true ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<FieldTextComponent\n\t\t\t\t\t\t\t\t\t\tname='changeProposalDate'\n\t\t\t\t\t\t\t\t\t\tlabelText='data wniosku'\n\t\t\t\t\t\t\t\t\t\tclassFieldSet='leftMargin'\n\t\t\t\t\t\t\t\t\t\tclassInput='short'\n\t\t\t\t\t\t\t\t\t\terrors={errors.changeProposalDate}\n\t\t\t\t\t\t\t\t\t\ttouched={touched.changeProposalDate}\n\t\t\t\t\t\t\t\t\t\tvalues={values.changeProposalDate}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<span>numer</span>\n\t\t\t\t\t\t\t\t\t<FieldTextComponent\n\t\t\t\t\t\t\t\t\t\tname='changeProposalNumber'\n\t\t\t\t\t\t\t\t\t\tlabelText='nr wniosku'\n\t\t\t\t\t\t\t\t\t\tclassFieldSet='leftMargin'\n\t\t\t\t\t\t\t\t\t\tclassInput='short'\n\t\t\t\t\t\t\t\t\t\terrors={errors.changeProposalNumber}\n\t\t\t\t\t\t\t\t\t\ttouched={touched.changeProposalNumber}\n\t\t\t\t\t\t\t\t\t\tvalues={values.changeProposalNumber}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<p className='description bold'>\n\t\t\t\t\t\t\t\tProszę wpisać dane inwestora (w tym adres zamieszkania lub\n\t\t\t\t\t\t\t\tsiedziby):\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t{fields.map((field) => (\n\t\t\t\t\t\t\t\t<React.Fragment key={field.name}>\n\t\t\t\t\t\t\t\t\t<FieldTextComponent\n\t\t\t\t\t\t\t\t\t\tname={field.name}\n\t\t\t\t\t\t\t\t\t\tlabelText={field.labelText}\n\t\t\t\t\t\t\t\t\t\ttouched={touched[field.name]}\n\t\t\t\t\t\t\t\t\t\tclassInput={field.classInput}\n\t\t\t\t\t\t\t\t\t\terrors={errors[field.name]}\n\t\t\t\t\t\t\t\t\t\tvalues={values[field.name]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{field.name === 'city' ? <br /> : null}\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\t\t\t\t\t<button type='submit'>Wyślij</button>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}